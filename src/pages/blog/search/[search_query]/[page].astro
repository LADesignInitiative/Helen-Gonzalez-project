---
export const prerender = false;
import StandardNavBar from "@/layout/standard-nav-bar.astro";
import RenderPagination from "@/components/paginatedBlog/renderPostPagination.tsx";
import {
  getPaginatedArray,
  hydratePaginatedPostArray,
} from "@/hooks/blogHooks.ts";
import Searchbar from "@/components/search/index.astro";
import BlogPreview from "@/components/blogComponents/previewLink.astro";
import type { PostAssetType, PostType } from "@/util/interface";
import { SearchQuery } from "@/hooks/search_feature.tsx";
const { page, search_query } = Astro.params;

const PAGE_SIZE = 6;

var allPosts: Array<PostType> | [] = [];
var totalPages: number = 0;
var searchResults: Array<PostType> | [] = [];
var assets: Array<PostAssetType> = [];
var assetMap = new Map();
try {
  allPosts = await Astro.glob("../../../posts/*.md");
} catch (error) {
  allPosts = [];
}

try {
  assets = await Astro.glob("@/assets/uploads/*");
} catch (error) {
  console.log(error);
}
searchResults = SearchQuery(search_query as string, allPosts);
totalPages = Math.ceil(searchResults.length / PAGE_SIZE);
const pageNumber = page ? parseInt(page) : null;
let inBound =
  page && typeof pageNumber === "number" && pageNumber <= totalPages;
if (!inBound && totalPages != 0) {
  return Astro.redirect("/error");
}
var paginatedArray =
  pageNumber && searchResults.length > 0
    ? getPaginatedArray(searchResults, pageNumber, PAGE_SIZE)
    : [];
paginatedArray =
  paginatedArray.length > 0
    ? hydratePaginatedPostArray(paginatedArray, assetMap, assets)
    : [];
---

<StandardNavBar pageTitle="Blog posts">
  <div class="mb-[100px] w-10/12 mx-auto" id="content-wrapper">
    <h1 class="font-bold text-2xl text-center mt-10">Blog posts</h1>
    <Searchbar />
    <div class="block mx-auto w-fit sm:[&>*]:inline-block justify-between">
      <p class="font-bold text-base my-5 text-center">
        Search query: "{search_query}"
      </p>
      <a href="/blog/1" class="mx-auto text-center custor-pointer z-[50]">
        <p class="underline hover:font-bold rounded-lg hover:bg-slate-300 p-1">
          Reset search
        </p>
      </a>
    </div>
    {
      totalPages === 0 && (
        <h2 class="text-center text-2xl">
          No blog posts are found with your search query.
        </h2>
      )
    }
    {
      totalPages > 1 && (
        <RenderPagination
          pageSize={PAGE_SIZE}
          totalCount={searchResults.length as number}
          currentPage={parseInt(page as any)}
          totalPages={totalPages}
          isMobile={true}
          search_query={search_query}
          client:load
        />
      )
    }
    {
      paginatedArray && paginatedArray.length > 0 && (
        <div class="grid sm:grid-cols-2 md:grid-cols-3 gap-5 mt-10">
          {paginatedArray.map(async (post: PostType) => {
            if (post.frontmatter.featured_image) {
              return (
                <BlogPreview
                  {...post.frontmatter}
                  url={post.url}
                  thumbnail={post.featured_image}
                />
              );
            }
            return <BlogPreview {...post.frontmatter} url={post.url} />;
          })}
        </div>
      )
    }
    {
      totalPages > 1 && (
        <div class="w-full h-auto">
          <RenderPagination
            pageSize={PAGE_SIZE}
            totalCount={searchResults.length as number}
            currentPage={parseInt(page as any) as number}
            totalPages={totalPages}
            isMobile={false}
            search_query={search_query}
            client:load
          />
        </div>
      )
    }
  </div>
</StandardNavBar>
